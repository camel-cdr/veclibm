// SPDX-FileCopyrightText: 2023 Rivos Inc.
//
// SPDX-License-Identifier: Apache-2.0

#include <math.h>
#include <stdio.h>

#include "rvvlm.h"
#include "test_infra.h"

#define COMMENT(comment)                                                       \
  { printf("\n=====\t" comment "\n"); }

int main() {
  unsigned long nb_tests;
  double x_start, x_end;

  COMMENT("erfcinv: current chosen algorithm; reduced argument in FP64 only")

  show_special_fp64(rvvlm_erfcinv, "Special Value handling of this function");

  x_start = 0x1.0p-5;
  x_end =  0x1.0p-2;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-2;
  x_end =  0x1.0p-1;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-1;
  x_end =  0x1.fffp-1;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 1.0 + 0x1.0p-5;
  x_end =  1.0 + 0x1.6p-2;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 2.0 - 0x1.0p-52;
  x_end =  1.0 + 0x1.6p-1;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0.24;
  x_end =  0.3;
  nb_tests = 2;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-54;
  x_end =  0x1.0p-53;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-55;
  x_end =  0x1.0p-54;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-56;
  x_end =  0x1.0p-55;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-57;
  x_end =  0x1.0p-56;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-58;
  x_end =  0x1.0p-57;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-59;
  x_end =  0x1.0p-58;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-60;
  x_end =  0x1.0p-59;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-100;
  x_end =  0x1.0p-60;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-500;
  x_end =  0x1.0p-100;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-1022;
  x_end =  0x1.0p-100;
  nb_tests = 100000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  x_start = 0x1.0p-1074;
  x_end =  0x1.0p-1022;
  nb_tests = 10000;
  report_err_byinv_fp64(rvvlm_erfcinv, erfcl, erfcl_prime, x_start, x_end, nb_tests);

  return 0;
}

